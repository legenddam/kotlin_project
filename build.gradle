buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    }
}

configure(rootProject) {
    apply plugin: 'java-base'
}

configure(subprojects) {
    apply plugin: 'java'
    sourceCompatibility = 1.10

    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://raw.githubusercontent.com/JesusMcCloud/tor-binary/master/release/' }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
}

configure([project(':desktop'),
           project(':monitor'),
           project(':relay'),
           project(':seednode'),
           project(':statsnode')]) {
    apply plugin: 'application'

    build.dependsOn installDist
    installDist.destinationDir = file('build/app')
    distZip.enabled = false
}

configure(project(':assets')) {
    dependencies {
        compile('network.bisq.libdohj:libdohj-core:d4ace7bc') {
            exclude(module: 'protobuf-java')
        }
        compile 'commons-codec:commons-codec:1.9'
        compile 'org.apache.commons:commons-lang3:3.4'
        compile 'org.bouncycastle:bcpg-jdk15on:1.56'
        testCompile 'junit:junit:4.12'
    }
}

configure(project(':common')) {
    apply plugin: 'com.google.protobuf'
    apply plugin: 'com.google.osdetector'

    ext {
        protobufVersion = '3.5.1'
        platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os
    }

    sourceSets.main.java.srcDir "$buildDir/generated/source/proto/main/java"

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:$protobufVersion"
        }
    }

    dependencies {
        compile "org.openjfx:javafx-base:11:$platform"
        compile "org.openjfx:javafx-graphics:11:$platform"
        compile "org.openjfx:javafx-controls:11:$platform"
        compile "org.openjfx:javafx-fxml:11:$platform"
        compile "org.openjfx:javafx-swing:11:$platform"

        compile "com.google.protobuf:protobuf-java:$protobufVersion"
        compile 'com.google.code.gson:gson:2.7'
        compile('com.googlecode.json-simple:json-simple:1.1.1') {
            exclude(module: 'junit')
        }
        compile 'org.springframework:spring-core:4.3.6.RELEASE'
        compile 'org.slf4j:slf4j-api:1.7.22'
        compile 'ch.qos.logback:logback-core:1.1.10'
        compile 'ch.qos.logback:logback-classic:1.1.10'
        compile 'com.google.code.findbugs:jsr305:3.0.1'
        compile 'com.google.guava:guava:20.0'
        compile('com.google.inject:guice:4.1.0') {
            exclude(module: 'guava')
        }
        compile('network.bisq.libdohj:libdohj-core:d4ace7bc') {
            exclude(module: 'jsr305')
            exclude(module: 'slf4j-api')
            exclude(module: 'guava')
            exclude(module: 'protobuf-java')
        }
        compile 'org.jetbrains:annotations:13.0'
        runtime 'org.bouncycastle:bcprov-jdk15on:1.56'
        compile 'org.bouncycastle:bcpg-jdk15on:1.56'
        compile 'commons-io:commons-io:2.4'
        compile 'org.apache.commons:commons-lang3:3.4'
        compileOnly 'org.projectlombok:lombok:1.18.2'
        annotationProcessor 'org.projectlombok:lombok:1.18.2'
        testCompile 'junit:junit:4.12'
    }
}
