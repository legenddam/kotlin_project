syntax = "proto3";

package io.bitsquare.proto;

//
// A simple protocol for describing signed sets of IP addresses. Intended to be distributed via HTTP[S] or in files.
//

option java_package = "io.bitsquare.common.wire.proto";
option java_outer_classname = "Messages";

message Envelope {
    int64 p2p_network_version = 1;
    oneof message {
        Ping ping = 2;
        Pong pong = 3;
        RefreshTTLMessage refresh_ttl_message = 4;
        CloseConnectionMessage close_connection_message = 5;
        PreliminaryGetDataRequest preliminary_get_data_request = 6;
        GetPeersRequest get_peers_request = 7;
    }
}

message Ping {
    int32 nonce = 1;
    int32 lastRoundTripTime = 2;
}

message Pong {
    int32 requestNonce = 1;
}

message RefreshTTLMessage {
    bytes hashOfDataAndSeqNr = 1;     // 32 bytes
    bytes signature = 2;              // 46 bytes
    bytes hashOfPayload = 3;          // 32 bytes
    int32 sequenceNumber = 4;            // 4 bytes
}

message CloseConnectionMessage {
    int64 messageVersion = 1;
    string reason = 2;
}


message PreliminaryGetDataRequest {
    int64 messageVersion = 1;
    int32 nonce = 2;
    repeated bytes excludedKeys = 3;
    repeated int32 supportedCapabilities = 4;
}

message GetPeersRequest {
    NodeAddress senderNodeAddress = 1;
    int32 nonce = 2;
    repeated int32 supportedCapabilities = 3;
    repeated Peer reportedPeers = 4;
}

message NodeAddress {
    string hostName = 1;
    int32 port = 2;
}

message Peer {
    NodeAddress nodeAddress = 1;
    int64 date = 2;
}
